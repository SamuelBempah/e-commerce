(Invoke-WebRequest -Uri "http://localhost:3000/products").Content  # Should return []Invoke-WebRequest -Uri "http://localhost:3000/products" -Method POST -Headers @{ "Content-Type" = "application/json" } -Body '{"name":"Shirt","price":20,"category":"Clothing"}'

Invoke-WebRequest -Uri "http://localhost:3000/products" -Method POST -Headers @{ "Content-Type" = "application/json" } -Body '{"name":"Shoes","price":50,"category":"Footwear"}'
(Invoke-WebRequest -Uri "http://localhost:3000/products").Content  # Check products
(Invoke-WebRequest -Uri "http://localhost:3000/products?category=Clothing").Content  # Filter test
Invoke-WebRequest -Uri "http://localhost:3000/cart" -Method POST -Headers @{ "Content-Type" = "application/json" } -Body '{"productId":1,"quantity":2}'
Invoke-WebRequest -Uri "http://localhost:3000/cart" -Method POST -Headers @{ "Content-Type" = "application/json" } -Body '{"productId":2,"quantity":1}'
(Invoke-WebRequest -Uri "http://localhost:3000/cart").Content  # Check cart
(Invoke-WebRequest -Uri "http://localhost:3000/orders" -Method POST).Content  # Create order
(Invoke-WebRequest -Uri "http://localhost:3000/orders").Content  # Check orders
(Invoke-WebRequest -Uri "http://localhost:3000/cart").Content  # Verify cart is empty